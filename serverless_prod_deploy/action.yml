name: "Dagster Serverless Prod Deploy"
description: "Pushes code locations to Dagster Cloud serverless prod deployment"
inputs:
  organization_id:
    description: "Dagster Cloud organization ID"
    required: true
  dagster_cloud_api_token:
    description: "Dagster Cloud API token"
    required: true
  location:
    required: true
    description: 'The code location to deploy. A JSON string consisting of keys "name", "directory", "registry", "location_file".'
  env_vars:
    required: false
    description: "A JSON string of environment variables to store in the deployed code location image."
runs:
  using: "composite"
  steps:
    - name: Get serverless organization info
      uses: dagster-io/dagster-cloud-action/registry_info@main
      with:
        organization_id: ${{ inputs.organization_id }}
        deployment: prod
      env:
        DAGSTER_CLOUD_API_TOKEN: ${{ inputs.dagster_cloud_api_token }}
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-west-2
    # - name: Login to ECR
    #   uses: aws-actions/amazon-ecr-login@v1
    - name: Login to ECR
      run: echo "${{ env.AWS_ECR_PASSWORD }}" | docker login --username ${{ env.AWS_ECR_USERNAME }} --password-stdin ${{  env.REGISTRY_URL  }}
    # - name: Login to Public ECR
    #   uses: docker/login-action@v2
    #   with:
    #     registry: ${{ env.REGISTRY_URL }}
    #     username: ${{ env.AWS_ECR_USERNAME }}
    #     password: ${{ env.AWS_ECR_PASSWORD }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Copy user code template file
      uses: dagster-io/dagster-cloud-action/copy_template@main
      with:
        target_directory: ${{ fromJson(inputs.location).directory }}
        env_vars: ${{ inputs.env_vars }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: ${{ fromJson(inputs.location).directory }}
        push: true
        tags: "${{ env.REGISTRY_URL }}:${{ github.sha }}"
        labels: |
          branch=${{ github.head_ref }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Deploy to Dagster Cloud
      uses: dagster-io/dagster-cloud-action/deploy@main
      id: deploy
      with:
        organization_id: ${{ inputs.organization_id }}
        deployment: prod
        pr: "${{ github.event.number }}"
        location: ${{ inputs.location }}
        image_tag: ${{ github.sha }}
        registry: ${{ env.REGISTRY_URL }}
      env:
        DAGSTER_CLOUD_API_TOKEN: ${{ inputs.dagster_cloud_api_token }}
