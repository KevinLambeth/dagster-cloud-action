name: 'Build and deploy dagster code locations'
description: 'Build project python executable, publish to dagster cloud, and update the code location'
inputs:
  dagster_cloud_file:
    description: 'Path to dagster_cloud.yaml'
    required: true
  python_version:
    description: 'Python version string, major.minor only, eg "3.8"'
    required: false
    default: '3.8'
  deploy:
    description: 'Whether to upload the code files and update the code location'
    required: false
    default: 'true'
  build_output_dir:
    description: 'Directory for built artifacts'
    required: false
    default: '/tmp/build'
  force_rebuild_deps:
    description: 'Whether to rebuild the dependencies, even if requirements.txt and setup.py did not change'
    required: false
    default: 'false'

runs:
  using: "composite"

  steps:
    - name: Set ACTION_REPO
      run: >
        echo "ACTION_REPO=$GITHUB_ACTION_PATH/../../" >> $GITHUB_ENV
      shell: bash

    - name: Set deps-cache-from
      # Don't use cached deps if instructed
      if: ${{ inputs.force_rebuild_deps != 'true' }}
      # For PR commits, use the target branch name as the cache-tag, for other commits, use the branch name itself
      run: echo "FLAG_DEPS_CACHE_FROM=--deps-cache-from=${{ github.repository }}/${{ github.base_ref && github.base_ref || github.ref_name }}" >> $GITHUB_ENV
      shell: bash

    - name: Set deps-cache-to
      # Only write to the cache-tag for non PR commits so PR commits don't upgrade dependency versions
      if: ${{ github.base_ref == '' }}
      run: echo "FLAG_DEPS_CACHE_TO=--deps-cache-to=${{ github.repository }}/${{ github.ref_name }}" >> $GITHUB_ENV
      shell: bash

    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"

    - if: ${{ inputs.python_version != '3.8' }}
      name: Set up Python ${{ inputs.python_version }} for target
      uses: actions/setup-python@v3
      with:
        python-version: ${{ inputs.python_version }}

    # - run: >
    #     cd $ACTION_REPO &&
    #     generated/gha/builder.pex -m builder.deploy 
    #     ${{ inputs.dagster_cloud_file }} ${{ inputs.build_output_dir }}
    #     --python-version=${{ inputs.python_version }}
    #     --upload-pex --update-code-location
    #     $FLAG_DEPS_CACHE_TO
    #     $FLAG_DEPS_CACHE_FROM
    #   shell: bash

    - name: Build with a Docker image
      # if: ${{ failure() }}
      run: >
        /usr/bin/docker run
        --workdir /github/workspace --rm
        -e "DAGSTER_CLOUD_URL" -e "DAGSTER_CLOUD_API_TOKEN" -e "ENABLE_FAST_DEPLOYS"
        -e "ACTION_REPO" -e "FLAG_DEPS_CACHE_FROM" -e "FLAG_DEPS_CACHE_TO" -e "pythonLocation"
        -e "LD_LIBRARY_PATH" -e "GITHUB_TOKEN" -e "INPUT_ENTRYPOINT" -e "INPUT_ARGS" -e "HOME=/github/home"
        -e "GITHUB_JOB" -e "GITHUB_REF" -e "GITHUB_SHA" -e "GITHUB_REPOSITORY"
        -e "GITHUB_REPOSITORY_OWNER" -e "GITHUB_RUN_ID" -e "GITHUB_RUN_NUMBER"
        -e "GITHUB_RETENTION_DAYS" -e "GITHUB_RUN_ATTEMPT" -e "GITHUB_ACTOR"
        -e "GITHUB_TRIGGERING_ACTOR" -e "GITHUB_WORKFLOW=/github/workflow" -e "GITHUB_HEAD_REF"
        -e "GITHUB_BASE_REF" -e "GITHUB_EVENT_NAME" -e "GITHUB_SERVER_URL"
        -e "GITHUB_API_URL" -e "GITHUB_GRAPHQL_URL" -e "GITHUB_REF_NAME"
        -e "GITHUB_REF_PROTECTED" -e "GITHUB_REF_TYPE" -e "GITHUB_WORKSPACE=/github/workspace"
        -e "GITHUB_ACTION" -e "GITHUB_EVENT_PATH=/github/workflow/event.json" -e "GITHUB_ACTION_REPOSITORY"
        -e "GITHUB_ACTION_REF" -e "GITHUB_PATH" -e "GITHUB_ENV" -e "GITHUB_STEP_SUMMARY"
        -e "GITHUB_STATE" -e "GITHUB_OUTPUT" -e "GITHUB_ACTION_PATH" -e "RUNNER_OS"
        -e "RUNNER_ARCH" -e "RUNNER_NAME" -e "RUNNER_TOOL_CACHE" -e "RUNNER_TEMP"
        -e "RUNNER_WORKSPACE" -e "ACTIONS_RUNTIME_URL" -e "ACTIONS_RUNTIME_TOKEN"
        -e "ACTIONS_CACHE_URL" -e GITHUB_ACTIONS=true -e CI=true
        --entrypoint "/usr/bin/bash"
        -v "/var/run/docker.sock":"/var/run/docker.sock"
        -v "/home/runner/work/_temp/_github_home":"/github/home"
        -v "/home/runner/work/_temp/_github_workflow":"/github/workflow"
        -v "/home/runner/work/_temp/_runner_file_commands":"/github/file_commands"
        -v "/home/runner/work/demo-1/demo-1":"/github/workspace"
        ghcr.io/dagster-io/dagster-manylinux-builder:dev 
        -c 'env; git config --global --add safe.directory /github/workspace/project-repo; /builder.pex -m builder.deploy --python-version=${{ inputs.python_version }} --upload-pex --update-code-location --build-sdists $FLAG_DEPS_CACHE_TO $FLAG_DEPS_CACHE_FROM ${{ inputs.dagster_cloud_file }} /tmp/build'
      shell: bash
      # uses: 'docker://ghcr.io/dagster-io/dagster-manylinux-builder:dev'
      # with:
      #   entrypoint: /usr/bin/bash
      #   args: -c "git config --global --add safe.directory /github/workspace/project-repo; /builder.pex -m builder.deploy --python-version=${{ inputs.python_version }} --upload-pex --update-code-location --build-sdists $FLAG_DEPS_CACHE_TO $FLAG_DEPS_CACHE_FROM ${{ inputs.dagster_cloud_file }} /tmp/build"
